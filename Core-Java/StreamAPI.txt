// Stream API

// forEach method

import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.stream.Stream;

public class Hello {

    public static void main(String args[]) {

        List<Integer> nums = Arrays.asList(4, 5, 6, 3, 2, 7);



        // Predicate<Integer> p = new Predicate<Integer>() {

        //     public boolean test(Integer n) {
        //         if (n % 2 == 0)
        //             return true;
        //         else
        //             return false;
        //     }
            
        // };

        // Predicate<Integer> p = new Predicate<Integer>() {

        //     public boolean test(Integer n) {
        //         return n%2==0;
        //     }
            
        // };

        // Function<Integer, Integer> fun = new Function<Integer,Integer>() {

        //     public Integer apply(Integer n) {
        //         return n*2;
        //     }
            
        // };



        Predicate<Integer> p = n -> n % 2 == 0;

        Function<Integer, Integer> fun = n -> n * 2; 

        // Stream API

        // Stream<Integer> s1 = nums.stream();
        // Stream<Integer> s2 = s1.filter(p);
        // Stream<Integer> s3 = s2.map(fun);

        // int result = s3.reduce(0, (c, e) -> c + e);

        // System.out.println(result);

        // int result = nums.stream()
        //     .filter(n -> n%2==0)
        //     .map(n -> n*2)
        //         .reduce(0, (c, e) -> c + e);

        Stream<Integer> sortedValues = nums.parallelStream()
                .filter(n -> n % 2 == 0)
                .sorted();


        sortedValues.forEach(n -> System.out.println(n));
        // System.out.println(result);

        // s3.forEach(n -> System.out.println(n));


        // forEach method

        // Consumer<Integer> con = new Consumer<Integer>() {
        //     public void accept(Integer n)
        //     {
        //         System.out.println(n);
        //     }
        // };
        // nums.forEach(con);


        // nums.forEach(n -> System.out.println(n));



        // for(int i = 0; i < nums.size(); i++) 
        // {
        //     System.out.println(nums.get(i));
        // }
        
        // for(int n : nums)
        // {
        //     System.out.println(n);
        // }




        // int sum = 0;
        // for(int n : nums)
        // {
        //     if (n % 2 == 0) {
        //         n = n * 2;
        //         sum += n;
        //     }
        // }
        // System.out.println(sum);
    }
}
